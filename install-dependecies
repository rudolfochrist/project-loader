#!/bin/bash

# helpers

# meta
version=$(cat version)

assert_value ()
{
    if [ -z "$2" ] || [ "${2:0:1}" = "-" ]; then
        echo "Error: Argument for $(cat version) is missing" >&2
        exit 1
    fi
}

# https://stackoverflow.com/questions/29436275/how-to-prompt-for-yes-or-no-in-bash
function yes_or_no {
    while true; do
        read -rp "$* [y/n]: " yn
        case $yn in
            [Yy]*) return 0  ;;
            [Nn]*) echo "Aborted" ; exit  1 ;;
        esac
    done
}

usage ()
{
    cat <<EOF
Usage: $(basename "$0") [options] [-f file]

Options:
  -f, --lock-file                        Specify ql.lock file to use.
  -y                                     Force download regadless systems directory exists.
  -v, --version                          Show version.
  -h, --help                             Show help.
EOF
}

# Parsing args
params=""
lock_file="ql.lock"
force="false"
global=no

while (( "$#" )); do
    case "$1" in
        -f|--sytems_file)
            lock_file="$2"
            shift 2
            ;;
        -y)
            force="true"
            shift
            ;;
        -v|--version)
            echo "$(basename "$0") v$version"
            exit 0
            ;;
        -h|--help)
            usage
            exit 0
            ;;
        -*)
            echo "Error: Unsupported flag $1" >&2
            exit 1
            ;;
        *)
            params+="$1 "
            shift
            ;;
    esac
done
# set positional arguments in their proper place
eval set -- "$params"

if [[ ! -e "$lock_file" ]]; then
    echo "Lock file missing: $lock_file"
    exit 1
fi

if [[ "$force" = "true" ]]; then
    rm -r ".ql-systems/"
fi

mkdir -p .ql-systems
cut -d' ' -f1 < "$lock_file" > .ql-systems/urls.txt
cut -d' ' -f2,3 < "$lock_file" > .ql-systems/hashes.txt

wget -nv -i .ql-systems/urls.txt -P .ql-systems/ -c
if (cd .ql-systems && md5sum -c hashes.txt); then
    find .ql-systems/ -name "*.tgz" -exec tar xf {} -C .ql-systems/ \;
fi
